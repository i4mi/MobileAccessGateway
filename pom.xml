<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>ch.bfh</groupId>
	<artifactId>mobile-access-gateway</artifactId>
	<version>1.0-SNAPSHOT</version>
	<description>FHIR Gateway supporting the PMIR and MHD server actors and uses XDS/PIXV3 to communicate with an XDS Affinity Domain</description>
	<packaging>jar</packaging>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

		<maven.compiler.source>1.11</maven.compiler.source>
		<maven.compiler.target>1.11</maven.compiler.target>
		<maven.build.timestamp.format>yyyy-MM-dd HH:mm:ss</maven.build.timestamp.format>

		<java.version>11</java.version>

		<!-- plugins -->
		<compiler-plugin-version>3.10.1</compiler-plugin-version>
		<dockerfile-plugin-version>1.4.13</dockerfile-plugin-version>
		<exec-plugin-version>3.0.0</exec-plugin-version>
		<spring-boot-plugin-version>2.6.7</spring-boot-plugin-version>

		<!-- libraries -->
		<camel-version>3.21.4</camel-version>
		<hibernate-version>5.2.5.Final</hibernate-version>
		<hl7v3-code-jar-version>1.3.7</hl7v3-code-jar-version>
		<ipf-version>4.8.0</ipf-version>
		<opensaml-version>2.6.6</opensaml-version>
		<spring-security-saml2-core-version>1.0.10.RELEASE</spring-security-saml2-core-version>
		<velocity-version>2.3</velocity-version>


		<start-class>ch.bfh.ti.i4mi.mag.MobileAccessGateway</start-class>
	</properties>


	<repositories>
		<repository>
			<id>oss-snapshots</id>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
			<url>https://oss.sonatype.org/content/repositories/snapshots/</url>
		</repository>
		<repository>
			<id>Alfresco</id>
		    <url>https://artifacts.alfresco.com/nexus/content/repositories/public/</url>
		</repository>
		<repository>
			<id>irisa-sumo</id>
			<name>Sumo Irisa Public Maven Repository Group</name>
			<url>https://gazelle.ihe.net/nexus/content/groups/public/</url>
			<layout>default</layout>
		</repository>
	</repositories>

	<dependencyManagement>
		<dependencies>
			<!-- IPF dependencies -->
			<dependency>
				<groupId>org.openehealth.ipf</groupId>
				<artifactId>ipf-dependencies</artifactId>
				<version>${ipf-version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<dependencies>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-autoconfigure</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-expression</artifactId>
			<scope>runtime</scope>
		</dependency>
		<!-- Compile -->

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
			<exclusions>
				<exclusion>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-starter-tomcat</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>

		<dependency>
			<groupId>io.micrometer</groupId>
			<artifactId>micrometer-registry-prometheus</artifactId>
			<scope>runtime</scope>
		</dependency>

		<!-- <dependency>
		  <groupId>org.apache.camel.springboot</groupId>
		  <artifactId>camel-rest-starter</artifactId>
		</dependency>  -->

		<!-- IPF -->
		<dependency>
			<groupId>org.openehealth.ipf.boot</groupId>
			<artifactId>ipf-fhir-r4-spring-boot-starter</artifactId>
			<exclusions>
				<exclusion>
					<groupId>org.ogce</groupId>
					<artifactId>xpp3</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>javax.ws.rs</groupId>
			<artifactId>javax.ws.rs-api</artifactId>
			<version>2.0.1</version>
		</dependency>

		<dependency>
			<groupId>org.openehealth.ipf.boot</groupId>
			<artifactId>ipf-xacml20-spring-boot-starter</artifactId>
			<version>${ipf-version}</version>
		</dependency>
		<dependency>
			<groupId>org.openehealth.ipf.platform-camel</groupId>
			<artifactId>ipf-platform-camel-ihe-fhir-r4-chppqm</artifactId>
			<version>${ipf-version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.velocity</groupId>
			<artifactId>velocity-engine-core</artifactId>
			<version>${velocity-version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-jetty</artifactId>
		</dependency>

		<dependency>
			<groupId>org.apache.camel.springboot</groupId>
			<artifactId>camel-servlet-starter</artifactId>
		</dependency>

		<dependency>
			<groupId>org.openehealth.ipf.platform-camel</groupId>
			<artifactId>ipf-platform-camel-ihe-fhir-r4-pixpdq</artifactId>
		</dependency>

		<dependency>
			<groupId>org.openehealth.ipf.platform-camel</groupId>
			<artifactId>ipf-platform-camel-ihe-fhir-r4-mhd</artifactId>
		</dependency>

		<dependency>
           <groupId>org.openehealth.ipf.platform-camel</groupId>
           <artifactId>ipf-platform-camel-ihe-fhir-stu3-pixpdq</artifactId>
        </dependency>

		<dependency>
			<groupId>org.openehealth.ipf.platform-camel</groupId>
			<artifactId>ipf-platform-camel-ihe-xds</artifactId>
		</dependency>

		<dependency>
            <groupId>org.openehealth.ipf.platform-camel</groupId>
            <artifactId>ipf-platform-camel-ihe-hl7v3</artifactId>
        </dependency>

        <dependency>
            <groupId>org.openehealth.ipf.commons</groupId>
            <artifactId>ipf-commons-ihe-xua</artifactId>
        </dependency>

		<dependency>
			<groupId>org.apache.camel</groupId>
			<artifactId>camel-cxf-spring-soap</artifactId>
			<version>${camel-version}</version>
		</dependency>
		<!-- nsatisfied dependency expressed through field 'config'; nested exception
			is org.springframework.boot.context.properties.ConfigurationPropertiesBindException:
			Error creating bean with name 'ipf.fhir-org.openehealth.ipf.boot.fhir.IpfFhirConfigurationProperties':
			Could not bind properties to 'IpfFhirConfigurationProperties' : prefix=ipf.fhir,
			ignoreInvalidFields=false, ignoreUnknownFields=true; nested exception is
			javax.validation.NoProviderFoundException: Unable to create a Configuration,
			because no Jakarta Bean Validation provider could be found. Add a provider
			like Hibernate Validator (RI) to your classpath. -->
		<!-- <dependency> <groupId>org.hibernate</groupId> <artifactId>hibernate-validator</artifactId>
			</dependency> -->

		<dependency>
			<groupId>net.ihe.gazelle</groupId>
			<artifactId>hl7v3-code-jar</artifactId>
			<version>${hl7v3-code-jar-version}</version>
			<exclusions>
				<exclusion>
					<groupId>saxon9he</groupId>
					<artifactId>net.sf.saxon</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-validator</artifactId>
			<version>${hibernate-version}</version>
		</dependency>

		<dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-cxf-soap</artifactId>
			<version>${camel-version}</version>
        </dependency>
        <dependency>
          <groupId>com.sun.xml.messaging.saaj</groupId>
          <artifactId>saaj-impl</artifactId>
          <version>1.5.3</version>
        </dependency>  
        <dependency>
	       <groupId>org.apache.cxf</groupId>
	       <artifactId>cxf-core</artifactId>
        </dependency>


		<dependency>
			<groupId>org.springframework.security.extensions</groupId>
			<artifactId>spring-security-saml2-core</artifactId>
			<version>${spring-security-saml2-core-version}</version>
			<exclusions>
              <exclusion>
                <groupId>xml-apis</groupId>
                <artifactId>xml-apis</artifactId>
              </exclusion>
            </exclusions>

		</dependency>


       <!-- https://mvnrepository.com/artifact/org.springframework.security/spring-security-saml2-service-provider -->


        <dependency>
          <groupId>org.opensaml</groupId>
          <artifactId>opensaml</artifactId>
          <version>${opensaml-version}</version>
        </dependency>

        <dependency>
          <groupId>org.apache.camel</groupId>
          <artifactId>camel-jackson</artifactId>
          <version>${camel-version}</version>
        </dependency>

        <dependency>
          <groupId>org.ehcache</groupId>
          <artifactId>ehcache</artifactId>
        </dependency>

        <dependency>
          <groupId>net.sf.saxon</groupId>
          <artifactId>Saxon-HE</artifactId>
        </dependency>
        <!-- 
        <dependency>
    		<groupId>xerces</groupId>
    		<artifactId>xercesImpl</artifactId>
    		<version>2.12.0</version>
		</dependency>
		-->

		<!-- Development tools -->
		<dependency>
			<!-- Project Lombok is a boilerplate code remover and space saver that
				generates code -->
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<scope>provided</scope>
		</dependency>

		<!-- Tests -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.camel</groupId>
			<artifactId>camel-test</artifactId>
			<version>${camel-version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.camel</groupId>
			<artifactId>camel-test-spring</artifactId>
			<version>${camel-version}</version>
			<scope>test</scope>
		</dependency>

	</dependencies>

	<build>
		<plugins>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>${compiler-plugin-version}</version>
				<configuration>
					<source>${java.version}</source>
					<target>${java.version}</target>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<version>${spring-boot-plugin-version}</version>
				<executions>
					<execution>
						<goals>
							<goal>repackage</goal>
						</goals>
						<configuration>
							<classifier>spring-boot</classifier>
							<mainClass>ch.bfh.ti.i4mi.mag.MobileAccessGateway</mainClass>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
              <groupId>org.codehaus.mojo</groupId>
              <artifactId>exec-maven-plugin</artifactId>
			  <version>${exec-plugin-version}</version>
              <configuration>
                <mainClass>${start-class}</mainClass>
              </configuration>
            </plugin>
			<!-- tag::plugin[] -->
			<plugin>
				<groupId>com.spotify</groupId>
				<artifactId>dockerfile-maven-plugin</artifactId>
				<version>${dockerfile-plugin-version}</version>
				<configuration>
					<repository>${docker.image.prefix}/${project.artifactId}</repository>
				</configuration>
			</plugin>
			<!-- end::plugin[] -->

			<!-- tag::unpack[] -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<executions>
					<execution>
						<id>unpack</id>
						<phase>package</phase>
						<goals>
							<goal>unpack</goal>
						</goals>
						<configuration>
							<artifactItems>
								<artifactItem>
									<groupId>${project.groupId}</groupId>
									<artifactId>${project.artifactId}</artifactId>
									<version>${project.version}</version>
								</artifactItem>
							</artifactItems>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<!-- end::unpack[] -->


		</plugins>
	</build>

</project>
